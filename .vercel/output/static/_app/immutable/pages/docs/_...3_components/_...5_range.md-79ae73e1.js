import{S as v,i as B,s as L,l as E,r as b,a as _,w as F,m as q,n as h,u as x,h as y,c as g,x as A,b as C,M as w,y as m,v as I,f,t as u,B as d,_ as N,E as S}from"../../../chunks/index-29635d82.js";import{N as H}from"../../../chunks/Number-5eb9ce72.js";import{F as M}from"../../../chunks/scroll-face605a.js";import{C as P}from"../../../chunks/CodeFence-3b1ba0cf.js";import{A as U}from"../../../chunks/Admonition-c3cb81bf.js";import"../../../chunks/Result-defa069c.js";import"../../../chunks/singletons-eb14b229.js";function j(c){let n,l;return{c(){n=E("p"),l=b("the property attributes.type by default is a text and you can change it to password | email | number | range | tel")},l(a){n=q(a,"P",{});var e=h(n);l=x(e,"the property attributes.type by default is a text and you can change it to password | email | number | range | tel"),e.forEach(y)},m(a,e){C(a,n,e),w(n,l)},p:S,d(a){a&&y(n)}}}function k(c){let n,l=c[0].title+"",a,e,p,D,o,r,i;return p=new U({props:{type:"note",$$slots:{default:[j]},$$scope:{ctx:c}}}),o=new P({props:{title:"Example",lang:"typescript",ext:"ts",linesCount:17,highlightLines:[[7,7],[11,13]],rawCode:`const fields: IField[] = [
	{
		type: 'input', // required
		name: 'name-field-range', // required
		value: 0,
		attributes: {
			type: 'range', // required
			id: 'id-field-range', // required
			classes: ['form-control'], // optional
			label: 'Label field range', // optional
			min: 0, // required
			max: 100, // required
			step: 10 // required
		}
	}
];
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> fields</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">IField</span><span style="color: #A6ACCD">[] </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">input</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">name-field-range</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">attributes</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">range</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">id-field-range</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">classes</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">form-control</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Label field range</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">min</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">max</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">step</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span></code></pre>`}}),r=new H({}),{c(){n=E("h1"),a=b(l),e=_(),F(p.$$.fragment),D=_(),F(o.$$.fragment),F(r.$$.fragment)},l(s){n=q(s,"H1",{});var t=h(n);a=x(t,l),t.forEach(y),e=g(s),A(p.$$.fragment,s),D=g(s),A(o.$$.fragment,s),A(r.$$.fragment,s)},m(s,t){C(s,n,t),w(n,a),C(s,e,t),m(p,s,t),C(s,D,t),m(o,s,t),m(r,s,t),i=!0},p(s,[t]){(!i||t&1)&&l!==(l=s[0].title+"")&&I(a,l);const $={};t&2&&($.$$scope={dirty:t,ctx:s}),p.$set($)},i(s){i||(f(p.$$.fragment,s),f(o.$$.fragment,s),f(r.$$.fragment,s),i=!0)},o(s){u(p.$$.fragment,s),u(o.$$.fragment,s),u(r.$$.fragment,s),i=!1},d(s){s&&y(n),s&&y(e),d(p,s),s&&y(D),d(o,s),d(r,s)}}}function z(c,n,l){let a;return N(c,M,e=>l(0,a=e)),[a]}class V extends v{constructor(n){super(),B(this,n,z,k,L,{})}}export{V as default};
