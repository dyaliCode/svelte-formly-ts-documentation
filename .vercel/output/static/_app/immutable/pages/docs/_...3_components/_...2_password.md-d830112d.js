import{S as E,i as g,s as b,w as D,x as F,y as C,f,t as A,B as d,E as h,l as x,r as v,a as w,m as q,n as P,u as B,h as y,c as _,b as u,M as I,v as R,_ as S}from"../../../chunks/index-29635d82.js";import{R as H,F as L}from"../../../chunks/Result-defa069c.js";import{F as M}from"../../../chunks/scroll-face605a.js";import{C as U}from"../../../chunks/CodeFence-3b1ba0cf.js";import{A as j}from"../../../chunks/Admonition-c3cb81bf.js";import"../../../chunks/singletons-eb14b229.js";function k(e){let s,t;return s=new L({props:{fields:e[0],form_name:"field_password"}}),{c(){D(s.$$.fragment)},l(a){F(s.$$.fragment,a)},m(a,l){C(s,a,l),t=!0},p:h,i(a){t||(f(s.$$.fragment,a),t=!0)},o(a){A(s.$$.fragment,a),t=!1},d(a){d(s,a)}}}function z(e){let s,t;return s=new H({props:{$$slots:{default:[k]},$$scope:{ctx:e}}}),{c(){D(s.$$.fragment)},l(a){F(s.$$.fragment,a)},m(a,l){C(s,a,l),t=!0},p(a,[l]){const p={};l&2&&(p.$$scope={dirty:l,ctx:a}),s.$set(p)},i(a){t||(f(s.$$.fragment,a),t=!0)},o(a){A(s.$$.fragment,a),t=!1},d(a){d(s,a)}}}function G(e){return[[{type:"input",name:"password",value:"",attributes:{type:"password",id:"password",classes:["form-control"],label:"Field password",placeholder:"Placeholder field password",disabled:!1,readonly:!1}}]]}class J extends E{constructor(s){super(),g(this,s,G,z,b,{})}}function K(e){let s,t;return{c(){s=x("p"),t=v("the property attributes.type by default is a text and you can change it to password | email | number | range | tel")},l(a){s=q(a,"P",{});var l=P(s);t=B(l,"the property attributes.type by default is a text and you can change it to password | email | number | range | tel"),l.forEach(y)},m(a,l){u(a,s,l),I(s,t)},p:h,d(a){a&&y(s)}}}function N(e){let s,t=e[0].title+"",a,l,p,m,r,c,i;return p=new j({props:{type:"note",$$slots:{default:[K]},$$scope:{ctx:e}}}),r=new U({props:{title:"Example",lang:"typescript",ext:"ts",linesCount:17,highlightLines:[[7,7]],rawCode:`const fields: IField[] = [
	{
		type: 'input', // required
		name: 'password', // required
		value: '', // optional
		attributes: {
			type: 'password', // default = text, or password, email, number, tel, optional
			id: 'password', // optional
			classes: ['form-control'], // optional
			label: 'Field password', // optional
			placeholder: 'Placeholder field password', // optional
			disabled: false, // optional
			readonly: false // optional
		}
	}
];
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> fields</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">IField</span><span style="color: #A6ACCD">[] </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">input</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">password</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// required</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #F07178">attributes</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">password</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// default = text, or password, email, number, tel, optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">password</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">classes</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">form-control</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Field password</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">placeholder</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Placeholder field password</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">disabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #F07178">readonly</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// optional</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span></code></pre>`}}),c=new J({}),{c(){s=x("h1"),a=v(t),l=w(),D(p.$$.fragment),m=w(),D(r.$$.fragment),D(c.$$.fragment)},l(n){s=q(n,"H1",{});var o=P(s);a=B(o,t),o.forEach(y),l=_(n),F(p.$$.fragment,n),m=_(n),F(r.$$.fragment,n),F(c.$$.fragment,n)},m(n,o){u(n,s,o),I(s,a),u(n,l,o),C(p,n,o),u(n,m,o),C(r,n,o),C(c,n,o),i=!0},p(n,[o]){(!i||o&1)&&t!==(t=n[0].title+"")&&R(a,t);const $={};o&2&&($.$$scope={dirty:o,ctx:n}),p.$set($)},i(n){i||(f(p.$$.fragment,n),f(r.$$.fragment,n),f(c.$$.fragment,n),i=!0)},o(n){A(p.$$.fragment,n),A(r.$$.fragment,n),A(c.$$.fragment,n),i=!1},d(n){n&&y(s),n&&y(l),d(p,n),n&&y(m),d(r,n),d(c,n)}}}function O(e,s,t){let a;return S(e,M,l=>t(0,a=l)),[a]}class Z extends E{constructor(s){super(),g(this,s,O,N,b,{})}}export{Z as default};
